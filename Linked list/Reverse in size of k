#include <stdio.h>
#include <stdlib.h>
typedef struct node{
    int data;
    struct node* next;
}node;
node * create_linkedlist(int n){
    int i;
    node*head=NULL;
    node*temp=NULL;
    node*p=NULL;
    for(i=0;i<n;i++){
        printf("Enter the %d node: ",i+1);
        temp=(node*)malloc(sizeof(node));
        scanf("%d",&(temp->data));
        temp->next=NULL;
        if(head==NULL)
            head=temp;
        else{
            p=head;
            while(p->next!=NULL)
                p=p->next;
            p->next = temp;
        }
    }
    return head;
}
void display_list(node * head){
    node * p = head;
    while(p!=NULL){
        printf("%d ",p->data);
        p=p->next;
    }
    printf("\n");
}
node *arrange(node *head,node *start,node *end,int k){
    node *p=start;
    node *temp=NULL;
    int i,arr[k];
    for(i=0;i<k;i++){
        arr[i]=p->data;
        p=p->next;}
    for(i=k-1;i>=0;i--){
        temp=(node *)malloc(sizeof(struct node));
        temp->data=arr[i];
        temp->next=NULL;
        if(head==NULL)
            head=temp;
        else{
            p=head;
            while(p->next!=NULL)
                p=p->next;
            p->next=temp;
        }
        
    }
    return head;
}
void reverse(node * head,int n){
    node *p=head;
    node *s=head;
    node *rev_head=NULL;
    int i,k;
    printf("Enter the size of the groups: "); scanf("%d",&k);
    for(i=1;i<=n;i++){
        if(i%k==0){
            rev_head=arrange(rev_head,s,p,k);
            s=p->next;
            if(i+k>n){
            while(p->next!=NULL)
                p=p->next;
            rev_head=arrange(rev_head,s,p,n-i);
            display_list(rev_head);
            return;
            }
        }
        p=p->next;
    }
    display_list(rev_head);
}
int main(){
    int n;
    node *head=NULL;
    printf("Enter the number of nodes you want: ");
    scanf("%d",&n);
    head=create_linkedlist(n);
    display_list(head);
    reverse(head,n);
    return 0;
}
